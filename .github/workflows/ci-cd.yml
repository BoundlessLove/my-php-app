---
name: PHP CI/CD Pipeline

on:
 push:
  branches: [main]
 workflow_dispatch:
  inputs:
   environment:
    description: 'Target deployment environment'
    required: false
    default: 'staging'
    type: string

jobs:
 test:
  runs-on: ubuntu-latest
  steps:
   - name: Checkout code
     uses: actions/checkout@v3

   - name: Set up PHP
     uses: shivammathur/setup-php@v2
     with:
      php-version: '8.2'

   - name: Install dependencies
     run: |
      composer install

   - name: Run Composer Security Audit
     run: |
      composer audit --no-interaction --no-dev

   - name: Run PHPUnit tests with reports
     run: |
      ./vendor/bin/phpunit
 deploy:
  needs: test
  runs-on: ubuntu-latest
  steps:
   - name: Set deployment environment
     run: |
      TARGET_ENV=${{ github.event.inputs.environment }}
      if [[ -n "$TARGET_ENV" && "$TARGET_ENV" == "staging" ]]; then
      #if [ -z "${{ github.event.inputs.environment }}" && ]; then
       echo "TARGET_ENV=staging" >> $GITHUB_ENV
      else
       echo "TARGET_ENV=production" >> $GITHUB_ENV
      fi
      # Above is when var supplied manually, if no runtimve env var input,
      # use Staging, else Prod.


   - name: Deploy to FastComet via SSH
     uses: appleboy/ssh-action@v0.1.10
     with:
      host: ${{ secrets.FASTCOMET_HOST }}
      username: ${{ secrets.FASTCOMET_USER }}
      key: ${{ secrets.FASTCOMET_SSH_KEY }}
      script: |
       if [ -z "$TARGET_ENV" ]; then
        echo "TARGET_ENV is not set. Defaulting to staging."
        TARGET_ENV="staging"
       fi
        # Above is only for when yaml is run with github workflow,
        # i.e. inputs.environment is empty string.
       if [ "$TARGET_ENV" = "production" ]; then
        echo "Running production deployment tasks..."
        # Add production-specific commands here
        cd /home5/systema1/devsecops.systematicdefence.tech/
        git pull origin main
       elif [ "$TARGET_ENV" = "staging" ]; then
        echo "Running staging deployment tasks..."
        # Add staging-specific commands here
        cd /home5/systema1/testapiserver.systematicdefence.tech/
        git pull origin main
       elif [ "$TARGET_ENV" = "dev" ]; then
        echo "Running dev deployment tasks..."
        # Add dev-specific commands here
       else
        echo "Unknown environment: $TARGET_ENV"
        exit 1
       fi
